{"version":3,"sources":["script.js"],"names":["inputCardName","document","getElementById","inputCardNumber","inputCardExpMonth","querySelector","inputCardExpYear","inputCardCvc","cardImageName","cardImageNumber","cardImageExpDate","cardImageCvc","checkInputs","ele","margins","validity","valueMissing","printErrorMsg","Number","value","split","join","successState","inputEle","msg","errorMsgEle","parentElement","lastElementChild","style","opacity","textContent","classList","add","bottom","marginBottom","nextElementSibling","contains","previousElementSibling","remove","insertCardNumber","val","limit","newNum","forEach","letter","index","addEventListener","e","preventDefault","toUpperCase"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\r\n\r\nconst inputCardName = document.getElementById(\"card-name\");\r\nconst inputCardNumber = document.getElementById(\"card-number\");\r\nconst inputCardExpMonth = document.querySelector(\".card-exp-month\");\r\nconst inputCardExpYear = document.querySelector(\".card-exp-year\");\r\nconst inputCardCvc = document.getElementById(\"card-cvc\");\r\n\r\nconst cardImageName = document.querySelector(\".card-details__name\");\r\nconst cardImageNumber = document.querySelector(\".card-details__number\");\r\nconst cardImageExpDate = document.querySelector(\".card-details__exp-date\");\r\nconst cardImageCvc = document.querySelector(\".card-details__cvc\");\r\n\r\nconst checkInputs = (ele, margins) => {\r\n  if (ele.validity.valueMissing) {\r\n    printErrorMsg(ele, \"Can't be blank\", margins);\r\n  } else if (!Number(ele.value.split(\" \").join(\"\"))) {\r\n    printErrorMsg(ele, \"Wrong format, numbers only\", margins);\r\n  } else {\r\n    successState(ele, margins);\r\n  }\r\n};\r\n\r\nconst printErrorMsg = (inputEle, msg, margins) => {\r\n  const errorMsgEle = inputEle.parentElement.lastElementChild;\r\n  errorMsgEle.style.opacity = 100;\r\n  errorMsgEle.textContent = msg;\r\n  inputEle.classList.add(\"card-details__form-input-invalid\");\r\n  if (margins) {\r\n    errorMsgEle.style.bottom = \"24px\";\r\n    inputEle.style.marginBottom = \"48px\";\r\n  }\r\n};\r\n\r\nconst successState = (inputEle, margins) => {\r\n  const errorMsgEle = inputEle.parentElement.lastElementChild;\r\n  if (\r\n    !inputEle.nextElementSibling.classList.contains(\r\n      \"card-details__form-input-invalid\"\r\n    ) &&\r\n    !inputEle.previousElementSibling?.classList.contains(\r\n      \"card-details__form-input-invalid\"\r\n    )\r\n  ) {\r\n    /*\r\n      The expDate and expYear inputs, both together has only one error msg element,\r\n      without this above condition, let's say the user first enters a value for the expDate and then \r\n    \r\n    */\r\n    errorMsgEle.style.opacity = 0;\r\n  }\r\n  inputEle.classList.remove(\"card-details__form-input-invalid\");\r\n  if (margins) {\r\n    errorMsgEle.style.bottom = \"0\";\r\n    inputEle.style.marginBottom = \"24px\";\r\n  }\r\n};\r\n\r\nconst insertCardNumber = (val) => {\r\n  let limit = 0;\r\n  let newNum = \"\";\r\n  val.split(\"\").forEach((letter, index) => {\r\n    ++limit;\r\n    newNum += letter;\r\n    if (limit % 4 === 0) {\r\n      newNum += \" \";\r\n    }\r\n  });\r\n  return newNum;\r\n};\r\n\r\ninputCardName.addEventListener(\"input\", (e) => {\r\n  e.preventDefault();\r\n  checkInputs(inputCardName, true);\r\n  cardImageName.textContent = inputCardName.value.toUpperCase();\r\n});\r\n\r\ninputCardNumber.addEventListener(\"change\", (e) => {\r\n  e.preventDefault();\r\n  checkInputs(inputCardNumber, true);\r\n  cardImageNumber.textContent = insertCardNumber(inputCardNumber.value);\r\n});\r\n\r\ninputCardExpMonth.addEventListener(\"input\", (e) => {\r\n  e.preventDefault();\r\n  checkInputs(inputCardExpMonth, false);\r\n});\r\n\r\ninputCardExpYear.addEventListener(\"input\", (e) => {\r\n  e.preventDefault();\r\n  checkInputs(inputCardExpYear, false);\r\n});\r\n\r\ninputCardCvc.addEventListener(\"input\", (e) => {\r\n  e.preventDefault();\r\n  checkInputs(inputCardCvc, false);\r\n  cardImageCvc.textContent = inputCardCvc.value;\r\n});\r\n"]}